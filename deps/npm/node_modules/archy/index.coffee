module.exports = archy = (obj, prefix, opts) ->
  prefix = ""  if prefix is `undefined`
  opts = {}  unless opts
  chr = (s) ->
    chars =
      "│": "|"
      "└": "`"
      "├": "+"
      "─": "-"
      "┬": "-"

    (if opts.unicode is false then chars[s] else s)

  obj = label: obj  if typeof obj is "string"
  nodes = obj.nodes or []
  lines = (obj.label or "").split("\n")
  splitter = "\n" + prefix + ((if nodes.length then chr("│") else " ")) + " "
  prefix + lines.join(splitter) + "\n" + nodes.map((node, ix) ->
    last = ix is nodes.length - 1
    more = node.nodes and node.nodes.length
    prefix_ = prefix + ((if last then " " else chr("│"))) + " "
    prefix + ((if last then chr("└") else chr("├"))) + chr("─") + ((if more then chr("┬") else chr("─"))) + " " + archy(node, prefix_, opts).slice(prefix.length + 2)
  ).join("")
