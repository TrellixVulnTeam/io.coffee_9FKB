global.FAKE_WINDOWS = true
npa = require("../npa.js")
test = require("tap").test
path = require("path")
cases =
  "C:\\x\\y\\z":
    raw: "C:\\x\\y\\z"
    scope: null
    name: null
    rawSpec: "C:\\x\\y\\z"
    spec: path.resolve("C:\\x\\y\\z")
    type: "local"

  "foo@C:\\x\\y\\z":
    raw: "foo@C:\\x\\y\\z"
    scope: null
    name: "foo"
    rawSpec: "C:\\x\\y\\z"
    spec: path.resolve("C:\\x\\y\\z")
    type: "local"

  "foo@/foo/bar/baz":
    raw: "foo@/foo/bar/baz"
    scope: null
    name: "foo"
    rawSpec: "/foo/bar/baz"
    spec: path.resolve("/foo/bar/baz")
    type: "local"

test "parse a windows path", (t) ->
  Object.keys(cases).forEach (c) ->
    expect = cases[c]
    actual = npa(c)
    t.same actual, expect, c
    return

  t.end()
  return

