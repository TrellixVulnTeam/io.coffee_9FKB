spinner = (opt) ->
  opt = opt or {}
  str = opt.stream or process.stderr
  tty = (if typeof opt.tty is "boolean" then opt.tty else true)
  string = opt.string or "/-\\|"
  ms = (if typeof opt.interval is "number" then opt.interval else 50)
  ms = 0  if ms < 0
  return false  if tty and not str.isTTY
  CR = (if str.isTTY then "\u001b[0G" else "\r")
  CLEAR = (if str.isTTY then "\u001b[2K" else "\r \r")
  s = 0
  sprite = string.split("")
  wrote = false
  delay = (if typeof opt.delay is "number" then opt.delay else 2)
  interval = setInterval(->
    return s = ++s % sprite.length  if --delay >= 0
    c = sprite[s]
    str.write c + CR
    wrote = true
    return
  , ms)
  unref = (if typeof opt.unref is "boolean" then opt.unref else true)
  interval.unref()  if unref and typeof interval.unref is "function"
  cleanup = (if typeof opt.cleanup is "boolean" then opt.cleanup else true)
  if cleanup
    process.on "exit", ->
      str.write CLEAR  if wrote
      return

  module.exports.clear = ->
    str.write CLEAR
    return

  interval
module.exports = spinner
module.exports.clear = ->
