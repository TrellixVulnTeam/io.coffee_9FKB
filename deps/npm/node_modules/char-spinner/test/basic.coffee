test = require("tap").test
spinner = require("../spin.js")
test "does nothing when not a tty", (t) ->
  int = spinner(stream:
    write: (c) ->
      throw new Error("wrote something: " + JSON.stringify(c))return

    isTTY: false
  )
  t.notOk int
  t.end()
  return

test "write spinny stuff", (t) ->
  output = ""
  written = 0
  expect = "b\u001b[0Gc\u001b[0Gd\u001b[0Ge\u001b[0Gf\u001b[0Gg\u001b[0Gh\u001b[0Gi\u001b[0Gj\u001b[0Gk\u001b[0Gl\u001b[0Gm\u001b[0Gn\u001b[0Go\u001b[0Gp\u001b[0Ga\u001b[0Gb\u001b[0Gc\u001b[0Gd\u001b[0Ge\u001b[0Gf\u001b[0Gg\u001b[0Gh\u001b[0Gi\u001b[0Gj\u001b[0Gk\u001b[0Gl\u001b[0Gm\u001b[0Gn\u001b[0Go\u001b[0Gp\u001b[0Ga\u001b[0Gb\u001b[0Gc\u001b[0Gd\u001b[0Ge\u001b[0Gf\u001b[0Gg\u001b[0Gh\u001b[0Gi\u001b[0Gj\u001b[0Gk\u001b[0Gl\u001b[0Gm\u001b[0Gn\u001b[0Go\u001b[0Gp\u001b[0Ga\u001b[0Gb\u001b[0Gc\u001b[0G"
  int = spinner(
    interval: 0
    string: "abcdefghijklmnop"
    stream:
      write: (c) ->
        output += c
        if ++written is 50
          t.equal output, expect
          clearInterval int
          t.end()
        return

      isTTY: true

    cleanup: false
  )
  return

