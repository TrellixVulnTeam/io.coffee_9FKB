cleanup = (map) ->
  return seen.push(map)  if seen.indexOf(map) isnt -1
  for i of map
    continue
  dep = map.dependencies
  if dep
    for i of dep
      continue
  map
readInstalled = require("../read-installed.js")
json = require("../package.json")
d = Object.keys(json.dependencies)
dd = Object.keys(json.devDependencies)
od = Object.keys(json.optionalDependencies)
known = d.concat(dd).concat(od).sort()
test = require("tap").test
path = require("path")
test "make sure that it works", (t) ->
  readInstalled path.join(__dirname, "../"),
    dev: true
    log: console.error
  , (er, map) ->
    t.notOk er, "er should be bull"
    t.ok map, "map should be data"
    return console.error(er.stack or er.message)  if er
    cleanup map
    deps = Object.keys(map.dependencies).sort()
    t.equal known.length, deps.length, "array lengths are equal"
    t.deepEqual known, deps, "arrays should be equal"
    t.notOk map.dependencies.tap.extraneous, "extraneous not set on devDep"
    t.end()
    return

  return

seen = []
