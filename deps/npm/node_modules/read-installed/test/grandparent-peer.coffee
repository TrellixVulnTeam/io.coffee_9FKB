allValid = (t, map) ->
  deps = Object.keys(map.dependencies or {})
  deps.forEach (dep) ->
    t.notOk map.dependencies[dep].invalid, "dependency " + dep + " of " + map.name + " is not invalid"
    t.notOk typeof map.dependencies[dep] is "string", "dependency " + dep + " of " + map.name + " is not missing"
    return

  deps.forEach (dep) ->
    allValid t, map.dependencies[dep]
    return

  return
readInstalled = require("../read-installed.js")
test = require("tap").test
path = require("path")
test "grandparent can satisfy peer dependencies", (t) ->
  readInstalled path.join(__dirname, "fixtures/grandparent-peer"),
    log: console.error
  , (err, map) ->
    allValid t, map
    t.end()
    return

  return

