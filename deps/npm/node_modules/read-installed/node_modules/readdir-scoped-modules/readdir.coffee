readdir = (dir, cb) ->
  fs.readdir dir, (er, kids) ->
    return cb(er)  if er
    debug "dir=%j, kids=%j", dir, kids
    readScopes dir, kids, (er, data) ->
      return cb(er)  if er
      
      # Sort for bonus consistency points
      data = data.sort((a, b) ->
        (if a > b then 1 else -1)
      )
      cb null, data

    return

  return

# Turn [ 'a', '@scope' ] into
# ['a', '@scope/foo', '@scope/bar']
readScopes = (root, kids, cb) ->
  # prevent maybe-sync zalgo release
  then = (scope, er, scopekids) ->
    return cb(er)  if er
    
    # XXX: Not sure how old this node bug is. Maybe superstition?
    scopekids = scopekids.filter((scopekid) ->
      not (scopekid is "." or scopekid is ".." or not scopekid)
    )
    kids.push.apply kids, scopekids.map((scopekid) ->
      scope + "/" + scopekid
    )
    debug "scope=%j scopekids=%j kids=%j", scope, scopekids, kids
    cb null, kids  if --l is 0
    return
  scopes = kids.filter((kid) ->
    kid.charAt(0) is "@"
  )
  kids = kids.filter((kid) ->
    kid.charAt(0) isnt "@"
  )
  debug "scopes=%j", scopes
  dz(cb) null, kids  if scopes.length is 0
  cb = once(cb)
  l = scopes.length
  scopes.forEach (scope) ->
    scopedir = path.resolve(root, scope)
    debug "root=%j scope=%j scopedir=%j", root, scope, scopedir
    fs.readdir scopedir, then_.bind(null, scope)
    return

  return
fs = require("fs")
dz = require("dezalgo")
once = require("once")
path = require("path")
debug = require("debuglog")("rds")
module.exports = readdir
