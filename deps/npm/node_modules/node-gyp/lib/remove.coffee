
###*
Module dependencies.
###
remove = (gyp, argv, callback) ->
  devDir = gyp.devDir
  log.verbose "remove", "using node-gyp dir:", devDir
  
  # get the user-specified version to remove
  v = argv[0] or gyp.opts.target
  log.verbose "remove", "removing target version:", v
  return callback(new Error("You must specify a version number to remove. Ex: \"" + process.version + "\""))  unless v
  
  # parse the version to normalize and make sure it's valid
  version = semver.parse(v)
  return callback(new Error("Invalid version number: " + v))  unless version
  
  # flatten the version Array into a String
  version = version.version
  versionPath = path.resolve(gyp.devDir, version)
  log.verbose "remove", "removing development files for version:", version
  
  # first check if its even installed
  fs.stat versionPath, (err, stat) ->
    if err
      if err.code is "ENOENT"
        callback null, "version was already uninstalled: " + version
      else
        callback err
      return
    
    # Go ahead and delete the dir
    rm versionPath, callback
    return

  return
module.exports = exports = remove
exports.usage = "Removes the node development files for the specified version"
fs = require("fs")
rm = require("rimraf")
path = require("path")
log = require("npmlog")
semver = require("semver")
