test = require("tap").test
fs = require("../")
test "open lots of stuff", (t) ->
  
  # Get around EBADF from libuv by making sure that stderr is opened
  # Otherwise Darwin will refuse to give us a FD for stderr!
  
  # How many parallel open()'s to do
  go = ->
    opens++
    fs.open __filename, "r", (er, fd) ->
      throw er  if er
      fds.push fd
      go()  if going
      return

    return
  
  # should hit ulimit pretty fast
  done = ->
    return doneCalled++  if closing
    if fds.length is 0
      
      #console.error('done called %d times', doneCalled)
      # First because of the timeout
      # Then to close the fd's opened afterwards
      # Then this time, to complete.
      # Might take multiple passes, depending on CPU speed
      # and ulimit, but at least 3 in every case.
      t.ok doneCalled >= 3
      return t.end()
    closing = true
    setTimeout (->
      
      # console.error('do closing again')
      closing = false
      done()
      return
    ), 100
    
    # console.error('closing time')
    closes = fds.slice(0)
    fds.length = 0
    closes.forEach (fd) ->
      fs.close fd, (er) ->
        throw er  if er
        return

      return

    return
  process.stderr.write ""
  n = 1024
  opens = 0
  fds = []
  going = true
  closing = false
  doneCalled = 0
  i = 0

  while i < n
    go()
    i++
  setTimeout (->
    going = false
    t.equal opens - fds.length, n
    done()
    return
  ), 100
  return

