# On windows, create a .cmd file.
# Read the #! in the file to see what it uses.  The vast majority
# of the time, this will be either:
# "#!/usr/bin/env <prog> <args...>"
# or:
# "#!<prog> <args...>"
#
# Write a binroot/pkg.bin + ".cmd" file that has this line in it:
# @<prog> <args...> %~dp0<target> %*
cmdShimIfExists = (from, to, cb) ->
  fs.stat from, (er) ->
    return cb()  if er
    cmdShim from, to, cb
    return

  return

# Try to unlink, but ignore errors.
# Any problems will surface later.
rm = (path, cb) ->
  fs.unlink path, (er) ->
    cb()
    return

  return
cmdShim = (from, to, cb) ->
  fs.stat from, (er, stat) ->
    return cb(er)  if er
    cmdShim_ from, to, cb
    return

  return
cmdShim_ = (from, to, cb) ->
  next = (er) ->
    writeShim from, to, cb
    return
  then_ = times(2, next, cb)
  rm to, then_
  rm to + ".cmd", then_
  return
writeShim = (from, to, cb) ->
  
  # make a cmd file and a sh script
  # First, check if the bin is a #! of some sort.
  # If not, then assume it's something that'll be compiled, or some other
  # sort of script, and just call it directly.
  mkdir path.dirname(to), (er) ->
    return cb(er)  if er
    fs.readFile from, "utf8", (er, data) ->
      return writeShim_(from, to, null, null, cb)  if er
      firstLine = data.trim().split(/\r*\n/)[0]
      shebang = firstLine.match(shebangExpr)
      return writeShim_(from, to, null, null, cb)  unless shebang
      prog = shebang[1]
      args = shebang[2] or ""
      writeShim_ from, to, prog, args, cb

    return

  return
writeShim_ = (from, to, prog, args, cb) ->
  
  # @IF EXIST "%~dp0\node.exe" (
  #   "%~dp0\node.exe" "%~dp0\.\node_modules\npm\bin\npm-cli.js" %*
  # ) ELSE (
  #   SETLOCAL
  #   SET PATHEXT=%PATHEXT:;.JS;=;%
  #   node "%~dp0\.\node_modules\npm\bin\npm-cli.js" %*
  # )
  
  # #!/bin/sh
  # basedir=`dirname "$0"`
  #
  # case `uname` in
  #     *CYGWIN*) basedir=`cygpath -w "$basedir"`;;
  # esac
  #
  # if [ -x "$basedir/node.exe" ]; then
  #   "$basedir/node.exe" "$basedir/node_modules/npm/bin/npm-cli.js" "$@"
  #   ret=$?
  # else
  #   node "$basedir/node_modules/npm/bin/npm-cli.js" "$@"
  #   ret=$?
  # fi
  # exit $ret
  next = ->
    chmodShim to, cb
    return
  shTarget = path.relative(path.dirname(to), from)
  target = shTarget.split("/").join("\\")
  longProg = undefined
  shProg = prog and prog.split("\\").join("/")
  shLongProg = undefined
  shTarget = shTarget.split("\\").join("/")
  args = args or ""
  unless prog
    prog = "\"%~dp0\\" + target + "\""
    shProg = "\"$basedir/" + shTarget + "\""
    args = ""
    target = ""
    shTarget = ""
  else
    longProg = "\"%~dp0\\" + prog + ".exe\""
    shLongProg = "\"$basedir/" + prog + "\""
    target = "\"%~dp0\\" + target + "\""
    shTarget = "\"$basedir/" + shTarget + "\""
  cmd = undefined
  if longProg
    cmd = "@IF EXIST " + longProg + " (\r\n" + "  " + longProg + " " + args + " " + target + " %*\r\n" + ") ELSE (\r\n" + "  @SETLOCAL\r\n" + "  @SET PATHEXT=%PATHEXT:;.JS;=;%\r\n" + "  " + prog + " " + args + " " + target + " %*\r\n" + ")"
  else
    cmd = prog + " " + args + " " + target + " %*\r\n"
  sh = "#!/bin/sh\n"
  if shLongProg
    sh = sh + "basedir=`dirname \"$0\"`\n" + "\n" + "case `uname` in\n" + "    *CYGWIN*) basedir=`cygpath -w \"$basedir\"`;;\n" + "esac\n" + "\n"
    sh = sh + "if [ -x " + shLongProg + " ]; then\n" + "  " + shLongProg + " " + args + " " + shTarget + " \"$@\"\n" + "  ret=$?\n" + "else \n" + "  " + shProg + " " + args + " " + shTarget + " \"$@\"\n" + "  ret=$?\n" + "fi\n" + "exit $ret\n"
  else
    sh = shProg + " " + args + " " + shTarget + " \"$@\"\n" + "exit $?\n"
  then_ = times(2, next, cb)
  fs.writeFile to + ".cmd", cmd, "utf8", then_
  fs.writeFile to, sh, "utf8", then_
  return
chmodShim = (to, cb) ->
  then_ = times(2, cb, cb)
  fs.chmod to, 0755, then_
  fs.chmod to + ".cmd", 0755, then_
  return
times = (n, ok, cb) ->
  errState = null
  (er) ->
    unless errState
      if er
        cb errState = er
      else ok()  if --n is 0
    return
module.exports = cmdShim
cmdShim.ifExists = cmdShimIfExists
fs = require("graceful-fs")
mkdir = require("mkdirp")
path = require("path")
shebangExpr = /^#\!\s*(?:\/usr\/bin\/env)?\s*([^ \t]+)(.*)$/
