BlockStream = require("../")
tap = require("tap")
tap.test "don't pad, small writes", (t) ->
  f = new BlockStream(16,
    nopad: true
  )
  t.plan 1
  f.on "data", (c) ->
    t.equal c.toString(), "abc", "should get 'abc'"
    return

  f.on "end", ->
    t.end()
    return

  f.write new Buffer("a")
  f.write new Buffer("b")
  f.write new Buffer("c")
  f.end()
  return

tap.test "don't pad, exact write", (t) ->
  f = new BlockStream(16,
    nopad: true
  )
  t.plan 1
  first = true
  f.on "data", (c) ->
    if first
      first = false
      t.equal c.toString(), "abcdefghijklmnop", "first chunk"
    else
      t.fail "should only get one"
    return

  f.on "end", ->
    t.end()
    return

  f.end new Buffer("abcdefghijklmnop")
  return

tap.test "don't pad, big write", (t) ->
  f = new BlockStream(16,
    nopad: true
  )
  t.plan 2
  first = true
  f.on "data", (c) ->
    if first
      first = false
      t.equal c.toString(), "abcdefghijklmnop", "first chunk"
    else
      t.equal c.toString(), "q"
    return

  f.on "end", ->
    t.end()
    return

  f.end new Buffer("abcdefghijklmnopq")
  return

