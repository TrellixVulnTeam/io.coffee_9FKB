test = require("tap").test
glob = require("../")
process.chdir __dirname

# expose timing issues
lag = 5
glob.Glob::_stat = (o) ->
  (f, cb) ->
    args = arguments
    setTimeout (->
      o.call this, f, cb
      return
    ).bind(this), lag += 5
    return
(glob.Glob::_stat)
test "mark, with **", (t) ->
  glob "a/*b*/**",
    mark: true
  , (er, results) ->
    throw er  if er
    expect = [
      "a/abcdef/"
      "a/abcdef/g/"
      "a/abcdef/g/h"
      "a/abcfed/"
      "a/abcfed/g/"
      "a/abcfed/g/h"
      "a/b/"
      "a/b/c/"
      "a/b/c/d"
      "a/bc/"
      "a/bc/e/"
      "a/bc/e/f"
      "a/cb/"
      "a/cb/e/"
      "a/cb/e/f"
    ]
    t.same results, expect
    t.end()
    return

  return

test "mark, no / on pattern", (t) ->
  glob("a/*",
    mark: true
  , (er, results) ->
    throw er  if er
    expect = [
      "a/abcdef/"
      "a/abcfed/"
      "a/b/"
      "a/bc/"
      "a/c/"
      "a/cb/"
    ]
    expect.push "a/symlink/"  if process.platform isnt "win32"
    t.same results, expect
    t.end()
    return
  ).on "match", (m) ->
    t.similar m, /\/$/
    return

  return

test "mark=false, no / on pattern", (t) ->
  glob("a/*", (er, results) ->
    throw er  if er
    expect = [
      "a/abcdef"
      "a/abcfed"
      "a/b"
      "a/bc"
      "a/c"
      "a/cb"
    ]
    expect.push "a/symlink"  if process.platform isnt "win32"
    t.same results, expect
    t.end()
    return
  ).on "match", (m) ->
    t.similar m, /[^\/]$/
    return

  return

test "mark=true, / on pattern", (t) ->
  glob("a/*/",
    mark: true
  , (er, results) ->
    throw er  if er
    expect = [
      "a/abcdef/"
      "a/abcfed/"
      "a/b/"
      "a/bc/"
      "a/c/"
      "a/cb/"
    ]
    expect.push "a/symlink/"  if process.platform isnt "win32"
    t.same results, expect
    t.end()
    return
  ).on "match", (m) ->
    t.similar m, /\/$/
    return

  return

test "mark=false, / on pattern", (t) ->
  glob("a/*/", (er, results) ->
    throw er  if er
    expect = [
      "a/abcdef/"
      "a/abcfed/"
      "a/b/"
      "a/bc/"
      "a/c/"
      "a/cb/"
    ]
    expect.push "a/symlink/"  if process.platform isnt "win32"
    t.same results, expect
    t.end()
    return
  ).on "match", (m) ->
    t.similar m, /\/$/
    return

  return

