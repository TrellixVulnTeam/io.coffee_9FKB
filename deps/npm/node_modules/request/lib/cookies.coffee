
# Adapt the sometimes-Async api of tough.CookieJar to our requirements
RequestJar = ->
  self = this
  self._jar = new CookieJar()
  return
"use strict"
tough = require("tough-cookie")
Cookie = tough.Cookie
CookieJar = tough.CookieJar
exports.parse = (str) ->
  str = str.uri  if str and str.uri
  throw new Error("The cookie function only accepts STRING as param")  if typeof str isnt "string"
  return null  unless Cookie
  Cookie.parse str

RequestJar::setCookie = (cookieOrStr, uri, options) ->
  self = this
  self._jar.setCookieSync cookieOrStr, uri, options or {}

RequestJar::getCookieString = (uri) ->
  self = this
  self._jar.getCookieStringSync uri

RequestJar::getCookies = (uri) ->
  self = this
  self._jar.getCookiesSync uri

exports.jar = ->
  unless CookieJar
    
    # tough-cookie not loaded, return a stub object:
    return (
      setCookie: ->

      getCookieString: ->

      getCookies: ->
    )
  new RequestJar()
