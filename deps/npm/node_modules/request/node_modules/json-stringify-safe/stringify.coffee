getSerialize = (fn, decycle) ->
  seen = []
  keys = []
  decycle = decycle or (key, value) ->
    "[Circular " + getPath(value, seen, keys) + "]"

  (key, value) ->
    ret = value
    if typeof value is "object" and value
      if seen.indexOf(value) isnt -1
        ret = decycle(key, value)
      else
        seen.push value
        keys.push key
    ret = fn(key, ret)  if fn
    ret
getPath = (value, seen, keys) ->
  index = seen.indexOf(value)
  path = [keys[index]]
  index--
  while index >= 0
    if seen[index][path[0]] is value
      value = seen[index]
      path.unshift keys[index]
    index--
  "~" + path.join(".")
stringify = (obj, fn, spaces, decycle) ->
  JSON.stringify obj, getSerialize(fn, decycle), spaces
module.exports = stringify
stringify.getSerialize = getSerialize
