
# two ways to do this in CoffeeScript on only one line, sub-70 chars:
# thingsToFix = fieldsToFix.map (name) -> ucFirst(name) + "Field"
# thingsToFix = (ucFirst(name) + "Field" for name in fieldsToFix)
normalize = (data, warn, strict) ->
  if warn is true
    warn = null
    strict = true
  strict = false  unless strict
  warn = (msg) ->  if not warn or data.private # noop
  data.gypfile = true  if data.scripts and data.scripts.install is "node-gyp rebuild" and not data.scripts.preinstall
  fixer.warn = ->
    warn makeWarning.apply(null, arguments)
    return

  thingsToFix.forEach (thingName) ->
    fixer["fix" + ucFirst(thingName)] data, strict
    return

  data._id = data.name + "@" + data.version
  return
ucFirst = (string) ->
  string.charAt(0).toUpperCase() + string.slice(1)
module.exports = normalize
fixer = require("./fixer")
makeWarning = require("./make_warning")
fieldsToFix = [
  "name"
  "version"
  "description"
  "repository"
  "modules"
  "scripts"
  "files"
  "bin"
  "man"
  "bugs"
  "keywords"
  "readme"
  "homepage"
]
otherThingsToFix = [
  "dependencies"
  "people"
  "typos"
]
thingsToFix = fieldsToFix.map((fieldName) ->
  ucFirst(fieldName) + "Field"
)
thingsToFix = thingsToFix.concat(otherThingsToFix)
