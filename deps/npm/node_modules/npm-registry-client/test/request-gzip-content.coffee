zlib = require("zlib")
tap = require("tap")
server = require("./lib/server.js")
common = require("./lib/common.js")
client = common.freshClient(
  "fetch-retries": 1
  "fetch-retry-mintimeout": 10
  "fetch-retry-maxtimeout": 100
)
TEST_URL = "http://localhost:1337/some-package-gzip/1.2.3"
pkg =
  _id: "some-package-gzip@1.2.3"
  name: "some-package-gzip"
  version: "1.2.3"

zlib.gzip JSON.stringify(pkg), (err, pkgGzip) ->
  tap.test "request gzip package content", (t) ->
    t.ifError err, "example package compressed"
    server.expect "GET", "/some-package-gzip/1.2.3", (req, res) ->
      res.statusCode = 200
      res.setHeader "Content-Encoding", "gzip"
      res.setHeader "Content-Type", "application/json"
      res.end pkgGzip
      return

    client.get TEST_URL, null, (er, data) ->
      throw er  if er
      t.deepEqual data, pkg
      t.end()
      return

    return

  tap.test "request wrong gzip package content", (t) ->
    server.expect "GET", "/some-package-gzip-error/1.2.3", (req, res) ->
      res.statusCode = 200
      res.setHeader "Content-Encoding", "gzip"
      res.setHeader "Content-Type", "application/json"
      res.end new Buffer("wrong gzip content")
      return

    client.get TEST_URL, null, (er) ->
      t.ok er
      t.end()
      return

    return

  return

