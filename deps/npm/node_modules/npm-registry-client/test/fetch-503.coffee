resolve = require("path").resolve
createReadStream = require("graceful-fs").createReadStream
readFileSync = require("graceful-fs").readFileSync
tap = require("tap")
cat = require("concat-stream")
server = require("./lib/server.js")
common = require("./lib/common.js")
tgz = resolve(__dirname, "./fixtures/underscore/1.3.3/package.tgz")
tap.test "fetch with retry on server error", (t) ->
  server.expect "/underscore/-/underscore-1.3.3.tgz", (req, res) ->
    t.equal req.method, "GET", "got expected method"
    res.writeHead 503
    res.end()
    return

  server.expect "/underscore/-/underscore-1.3.3.tgz", (req, res) ->
    t.equal req.method, "GET", "got expected method"
    res.writeHead 200,
      "content-type": "application/x-tar"
      "content-encoding": "gzip"

    createReadStream(tgz).pipe res
    return

  client = common.freshClient()
  client.conf.set "fetch-retry-mintimeout", 100
  client.fetch "http://localhost:1337/underscore/-/underscore-1.3.3.tgz", {}, (er, res) ->
    t.ifError er, "loaded successfully"
    sink = cat((data) ->
      t.deepEqual data, readFileSync(tgz)
      t.end()
      return
    )
    res.on "error", (error) ->
      t.ifError error, "no errors on stream"
      return

    res.pipe sink
    return

  return

