tap = require("tap")
server = require("./lib/server.js")
common = require("./lib/common.js")
nerfed = "//localhost:" + server.port + "/:"
configuration = {}
configuration[nerfed + "_authToken"] = "of-glad-tidings"
client = common.freshClient(configuration)
cache = require("./fixtures/@npm/npm-registry-client/cache.json")
REV = "/-rev/213-0a1049cf56172b7d9a1184742c6477b9"
VERSION = "3.0.6"
tap.test "unpublish a package", (t) ->
  server.expect "GET", "/@npm%2fnpm-registry-client?write=true", (req, res) ->
    t.equal req.method, "GET"
    res.json cache
    return

  server.expect "PUT", "/@npm%2fnpm-registry-client" + REV, (req, res) ->
    t.equal req.method, "PUT"
    b = ""
    req.setEncoding "utf-8"
    req.on "data", (d) ->
      b += d
      return

    req.on "end", ->
      updated = JSON.parse(b)
      t.notOk updated.versions[VERSION]
      return

    res.json cache
    return

  server.expect "GET", "/@npm%2fnpm-registry-client", (req, res) ->
    t.equal req.method, "GET"
    res.json cache
    return

  server.expect "DELETE", "/@npm%2fnpm-registry-client/-/@npm%2fnpm-registry-client-" + VERSION + ".tgz" + REV, (req, res) ->
    t.equal req.method, "DELETE"
    res.json unpublished: true
    return

  client.unpublish "http://localhost:1337/@npm%2fnpm-registry-client", VERSION, (error) ->
    t.ifError error, "no errors"
    t.end()
    return

  return

