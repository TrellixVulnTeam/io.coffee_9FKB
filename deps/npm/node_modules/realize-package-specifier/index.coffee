"use strict"
fs = require("fs")
path = require("path")
dz = require("dezalgo")
npa = require("npm-package-arg")
module.exports = (spec, where, cb) ->
  finalize = (type) ->
    if type? and type isnt dep.type
      dep.type = type
      unless dep.rawSpec
        dep.rawSpec = dep.name
        dep.name = null
    dep.spec = specpath  if dep.type is "local" or dep.type is "directory"
    cb null, dep
    return
  if where instanceof Function
    cb = where
    where = null
  where = "."  unless where?
  cb = dz(cb)
  try
    dep = npa(spec)
  catch e
    return cb(e)
  specpath = (if dep.type is "local" then path.resolve(where, dep.spec) else path.resolve((if dep.rawSpec then dep.rawSpec else dep.name)))
  fs.stat specpath, (er, s) ->
    return finalize()  if er
    return finalize("local")  unless s.isDirectory()
    fs.stat path.join(specpath, "package.json"), (er) ->
      finalize (if er then null else "directory")
      return

    return

  return
