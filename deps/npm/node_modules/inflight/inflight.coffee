inflight = (key, cb) ->
  if reqs[key]
    reqs[key].push cb
    null
  else
    reqs[key] = [cb]
    makeres key
makeres = (key) ->
  once RES = ->
    cbs = reqs[key]
    len = cbs.length
    args = slice(arguments)
    i = 0

    while i < len
      cbs[i].apply null, args
      i++
    if cbs.length > len
      
      # added more in the interim.
      # de-zalgo, just in case, but don't call again.
      cbs.splice 0, len
      process.nextTick ->
        RES.apply null, args
        return

    else
      delete reqs[key]
    return

slice = (args) ->
  length = args.length
  array = []
  i = 0

  while i < length
    array[i] = args[i]
    i++
  array
wrappy = require("wrappy")
reqs = Object.create(null)
once = require("once")
module.exports = wrappy(inflight)
